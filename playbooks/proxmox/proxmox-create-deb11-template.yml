---
# source:  https://forum.proxmox.com/threads/regenerate-cloud-init-image-using-ansible.89964/

- hosts: proxmox

  vars_files:
    - MY_VAULT.yml

  vars:
    # -> put into group_vars/proxmox.yml:
    # proxmox_api_host: server1.domain.tld
    # proxmox_create_node: server1
    # set if node name is not equal to ansible ssh-connection:
    # proxmox_create_node_ansible: server1.domain.tld
    
    # -> vaulted vars:
    # proxmox_api_user: root@pam
    # proxmox_api_pass: SECRET

    proxmox_vm_diskdevice: virtio0
    proxmox_vm_vga: qxl
    proxmox_vm_ostype: l26
    proxmox_net_config: "virtio,bridge=vmbr0"
    # destroy template (updating does not work)
    proxmox_destroy: True
    # install pip?
    proxmox_install_pip: True
    # install proxmoxer via pip?
    proxmox_install_proxmoxer: True

    cloudinit_download_folder: "/tmp/cloudinit"
    cloudinit_download_filename: "cloudinit-image.qcow2"
    cloudinit_download_image: True
    # for debugging:
    # cloudinit_download_image: False
    cloudinit_images:
      debian10:
        url: "https://cdimage.debian.org/images/cloud/buster/latest/debian-10-genericcloud-amd64.qcow2"
        hash_algorithm: sha512
        hash_checksum_file: "https://cdimage.debian.org/images/cloud/buster/latest/SHA512SUMS"
      debian11:
        url: "https://cdimage.debian.org/images/cloud/bullseye/latest/debian-11-genericcloud-amd64.qcow2"
        hash_algorithm: sha512
        hash_checksum_file: "https://cdimage.debian.org/images/cloud/bullseye/latest/SHA512SUMS"
      ubuntu18_04:
        url: "https://cloud-images.ubuntu.com/bionic/current/bionic-server-cloudimg-amd64.img"
        hash_algorithm: sha256
        hash_checksum_file: "https://cloud-images.ubuntu.com/bionic/current/SHA256SUMS"
      ubuntu20_04:
        url: "https://cloud-images.ubuntu.com/focal/current/focal-server-cloudimg-amd64.img"
        hash_algorithm: sha256
        hash_checksum_file: https://cloud-images.ubuntu.com/focal/current/SHA256SUMS
      ubuntu22_04:
        url: "https://cloud-images.ubuntu.com/jammy/current/jammy-server-cloudimg-amd64.img"
        hash_algorithm: sha256
        hash_checksum_file: "https://cloud-images.ubuntu.com/jammy/current/SHA256SUMS"

  vars_prompt:
    - name: proxmox_vm_cloudinit_image
      prompt: "Name of the template (examples: template-cloudinit-deb11-latest, template-cloudinit-ubuntu22-04-latest): "
      default: "template-cloudinit-deb11-latest"
      private: no
    - name: cloudinit_vm_distribution
      prompt: "which image do you want to use (debian10, debian11, ubuntu18_04, ubuntu20_04, ubuntu22_04): "
      default: "debian11"
      private: no
    - name: proxmox_storage
      prompt: "Choose Storage: local, local-zfs "
      default: "local-zfs"
      private: no

  tasks:
  - name: Create download directory
    ansible.builtin.file:
      path: "{{ cloudinit_download_folder }}"
      owner: root
      group: root
      mode: '700'
      state: directory
    run_once: true
    delegate_to: "{{ proxmox_create_node_ansible | default(proxmox_create_node) }}"
    
  - name: Download cloud image
    ansible.builtin.get_url:
      url: "{{ item.value.url }}"
      checksum: "{{ item.value.hash_algorithm + ':' + item.value.hash_checksum_file }}"
      dest: "{{ cloudinit_download_folder }}/{{ cloudinit_download_filename }}"
    when:
      - cloudinit_download_image|bool
      - item.key == cloudinit_vm_distribution
    loop: "{{ lookup('dict', cloudinit_images) }}"
    run_once: true
    delegate_to: "{{ proxmox_create_node_ansible | default(proxmox_create_node) }}"

  - name: Include geerlingguy.pip
    ansible.builtin.include_role:
      name: geerlingguy.pip
    when: proxmox_install_pip

  - name: Include proxmoxer via pip
    ansible.builtin.pip:
      name: proxmoxer
    run_once: true
    delegate_to: "{{ proxmox_create_node_ansible | default(proxmox_create_node) }}"
    when: proxmox_install_proxmoxer

  - name: Install proxmoxer via pip
    ansible.builtin.pip:
      name: proxmoxer
    run_once: true
    delegate_to: "{{ proxmox_create_node_ansible | default(proxmox_create_node) }}"
    when: proxmox_install_proxmoxer

  - name: Destroy VM
    community.general.proxmox_kvm:
      api_user: "{{ proxmox_api_user }}"
      api_password: "{{ proxmox_api_pass }}"
      api_host: "{{ proxmox_api_host }}"
      name: "{{ proxmox_vm_cloudinit_image }}"
      state: absent
    when: proxmox_destroy
    run_once: true

  - name: Create empty VM for Cloud-Init
    community.general.proxmox_kvm:
      api_user: "{{ proxmox_api_user }}"
      api_password: "{{ proxmox_api_pass }}"
      api_host: "{{ proxmox_api_host }}"
      node: "{{ proxmox_create_node | default(proxmox_create_node_ansible) }}"
      name: "{{ proxmox_vm_cloudinit_image }}"
      description: "updated on: {{ ansible_date_time.iso8601 }}"
      pool: "{{ proxmox_pool | default(omit) }}"
      boot: c
      bootdisk: virtio0
      ide:
        ide2: "none,media=cdrom"
      scsihw: virtio-scsi-pci
      ostype: "{{ proxmox_vm_ostype }}"
      timeout: 120
      serial:
        serial0: socket
      net:
        net0: '{{ proxmox_net_config }}'
    register: proxvm
    run_once: true
    delegate_to: "{{ proxmox_create_node_ansible | default(proxmox_create_node) }}"

  - name: Import cloudinit disk # noqa no-changed-when
    ansible.builtin.command: "qm importdisk {{ proxvm.vmid }} {{ cloudinit_download_folder }}/{{ cloudinit_download_filename }} {{ proxmox_storage }}"
    run_once: true
    delegate_to: "{{ proxmox_create_node_ansible | default(proxmox_create_node) }}"

  - name: Attach unused0 disk to virtio # noqa no-changed-when
    ansible.builtin.command: "qm set {{ proxvm.vmid }} --virtio0 {{ proxmox_storage + ':' + 'vm-' + proxvm.vmid|string + '-disk-0' }}"
    run_once: true
    delegate_to: "{{ proxmox_create_node_ansible | default(proxmox_create_node) }}"
    
  - name: Convert VM to template
    community.general.proxmox_kvm:
      api_user: "{{ proxmox_api_user }}"
      api_password: "{{ proxmox_api_pass }}"
      api_host: "{{ proxmox_api_host }}"
      node: "{{ proxmox_create_node | default(proxmox_create_node_ansible) }}"
      name: "{{ proxmox_vm_cloudinit_image }}"
      template: yes
      update: yes
    run_once: true
    delegate_to: "{{ proxmox_create_node_ansible | default(proxmox_create_node) }}"
