---
# tasks file for uptime kuma

- name: Include OS-specific variables
  ansible.builtin.include_vars: "vars-{{ ansible_os_family }}.yml"
  tags:
    - always

- name: Create user for uptime kuma
  ansible.builtin.user:
    name: "{{ uptimekuma_user }}"
    # group: "{{ uptimekuma_group }}"
    #groups: "{{ uptimekuma_memberof_groups | default(omit) }}"
    #append: true
    shell: "{{ uptimekuma_shell_bin }}"
    state: present
  become: true

- name: Import role for git
  ansible.builtin.import_role:
    name: "{{ uptimekuma_role_git_name }}"
  when: uptimekuma_role_git_import

- name: Install git
  ansible.builtin.package:
    name: git
    state: present
  when: not uptimekuma_role_git_import

- name: Install tar for nvm
  ansible.builtin.package:
    name: tar
    state: present
  when:
  - uptimekuma_use_nvm

- name: Import role for npm
  ansible.builtin.import_role:
    name: "{{ uptimekuma_role_npm_name }}"
    # robertdebock.npm
    #npm_apt_repositories:
    #  - "deb https://deb.nodesource.com/node_18.x {{ ansible_distribution_release }} main"
    #  - "deb-src https://deb.nodesource.com/node_18.x {{ ansible_distribution_release }} main"
  become: true
  when:
  - uptimekuma_role_npm_import
  - not uptimekuma_use_nvm

- name: Import role for nvm
  ansible.builtin.import_role:
    name: "{{ uptimekuma_role_nvm_name }}"
  become: true
  become_user: "{{ uptimekuma_user }}"
  vars:
    # morgangraphics.ansible_role_nvm
    nvm_profile: "/home/{{ uptimekuma_user }}/{{ uptimekuma_shell_config }}"
    nodejs_version: "{{ uptimekuma_nvm_nodejs_version }}"
  when:
  - uptimekuma_use_nvm
  - uptimekuma_role_nvm_name is defined

- name: Create uptime kuma folder
  ansible.builtin.file:
    path: "{{ uptimekuma_install_dir }}"
    owner: "{{ uptimekuma_user }}"
    group: "{{ uptimekuma_group }}"
    mode: '0750'
    recurse: true
    state: directory

- name: Clone uptime kuma repo
  ansible.builtin.git:
    clone: true
    dest: "{{ uptimekuma_install_dir }}"
    force: yes
    repo: "{{ uptimekuma_git_repo_url }}"
    update: true
    version: '{{ uptimekuma_version | default(omit) }}'
  become: true
  become_user: "{{ uptimekuma_user }}"
  register: uptimekuma_cloned

- name: Install uptime kuma
  ansible.builtin.shell: bash -ilc 'npm run setup'
  #args:
 #   executable: "{{ uptimekuma_shell_bin }}"
  become: true
  become_user: "{{ uptimekuma_user }}"
  args:
    chdir: "{{ uptimekuma_install_dir }}"
  when: uptimekuma_cloned.changed

- name: Create uptime kuma start skript
  ansible.builtin.template:
    src: "start.sh.j2"
    dest: "{{ uptimekuma_install_dir }}/start.sh"
    owner: "{{ uptimekuma_user }}"
    group: "{{ uptimekuma_group }}"
    mode: '0750'
  notify: Restart uptime kuma

- name: Create systemd service file for uptime kuma
  ansible.builtin.template:
    src: "{{ uptimekuma_service_file_template }}"
    dest: "{{ uptimekuma_service_file_target }}"
  notify: Reload systemd units

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Enable and start uptime kuma as systemd unit
  ansible.builtin.systemd:
    name: "{{ uptimekuma_service_name }}"
    state: started
    enabled: true

- include_tasks: nginx.yml
  when: uptimekuma_nginx_deploy_reverseconfig
