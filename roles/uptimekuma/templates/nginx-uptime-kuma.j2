server {
  listen 80 {% if uptimekuma_nginx_remove_default_config %}default_server{% endif %};
  listen [::]:80 {% if uptimekuma_nginx_remove_default_config %}default_server{% endif %};
  server_name {{ uptimekuma_hostname }};

  location / {
    # remember: 301 = moved permanently (search engines will react), 302 = moved temporarily (search engines will hold back)
    return 301 https://$server_name$request_uri;
  }
}

server {
  listen 443 ssl http2 {% if uptimekuma_nginx_remove_default_config %}default_server{% endif %};
  listen [::]:443 ssl http2 {% if uptimekuma_nginx_remove_default_config %}default_server{% endif %};
  server_name {{ uptimekuma_hostname }};

{% if uptimekuma_nginx_use_nginx_common_snippet %}
  include {{ uptimekuma_nginx_tls_hardening_snippet }};
{% else %}
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers on;
  ssl_ciphers CHACHA20:-AES:AESGCM:AESCCM:!kRSA:!PSK:!aECDSA:!aDSS:!aNULL:!eNULL:!SHA1:!MD5;
  ssl_ecdh_curve X25519:secp521r1:secp384r1;
{% if uptimekuma_tls_hsts_enable %}
  add_header Strict-Transport-Security "max-age={{ uptimekuma_tls_hsts_time }}";
{% endif %}
{% endif %}

  ssl_certificate {{ uptimekuma_nginx_ssl_certificate }};
  ssl_certificate_key {{ uptimekuma_nginx_ssl_certificate_key }};

  location / {
    proxy_set_header Host      $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_http_version 1.1;
    proxy_set_header   Upgrade $http_upgrade;
    proxy_set_header   Connection "upgrade";
    proxy_pass                 http://{{ uptimekuma_listen_host }}:{{ uptimekuma_listen_port }};
    proxy_read_timeout 30;
  }
}
